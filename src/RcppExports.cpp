// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// diff_section
std::vector<double> diff_section(NumericVector x, int br);
RcppExport SEXP cycleRtools_diff_section(SEXP xSEXP, SEXP brSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type br(brSEXP);
    __result = Rcpp::wrap(diff_section(x, br));
    return __result;
END_RCPP
}
// Diff
std::vector<double> Diff(NumericVector x);
RcppExport SEXP cycleRtools_Diff(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    __result = Rcpp::wrap(Diff(x));
    return __result;
END_RCPP
}
// mmv2
std::vector<double> mmv2(NumericVector x, NumericVector windows);
RcppExport SEXP cycleRtools_mmv2(SEXP xSEXP, SEXP windowsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type windows(windowsSEXP);
    __result = Rcpp::wrap(mmv2(x, windows));
    return __result;
END_RCPP
}
// na_split
std::vector<double> na_split(NumericVector x);
RcppExport SEXP cycleRtools_na_split(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    __result = Rcpp::wrap(na_split(x));
    return __result;
END_RCPP
}
// ema_weights
std::vector<double> ema_weights(double len);
RcppExport SEXP cycleRtools_ema_weights(SEXP lenSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type len(lenSEXP);
    __result = Rcpp::wrap(ema_weights(len));
    return __result;
END_RCPP
}
// mean_weights
std::vector<double> mean_weights(double len);
RcppExport SEXP cycleRtools_mean_weights(SEXP lenSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type len(lenSEXP);
    __result = Rcpp::wrap(mean_weights(len));
    return __result;
END_RCPP
}
// rollmean_
std::vector<double> rollmean_(NumericVector x, double window, bool ema, bool narm);
RcppExport SEXP cycleRtools_rollmean_(SEXP xSEXP, SEXP windowSEXP, SEXP emaSEXP, SEXP narmSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type window(windowSEXP);
    Rcpp::traits::input_parameter< bool >::type ema(emaSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    __result = Rcpp::wrap(rollmean_(x, window, ema, narm));
    return __result;
END_RCPP
}
// rollmean_nunif
std::vector<double> rollmean_nunif(NumericVector x, NumericVector t, double window);
RcppExport SEXP cycleRtools_rollmean_nunif(SEXP xSEXP, SEXP tSEXP, SEXP windowSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type t(tSEXP);
    Rcpp::traits::input_parameter< double >::type window(windowSEXP);
    __result = Rcpp::wrap(rollmean_nunif(x, t, window));
    return __result;
END_RCPP
}
// Wbal_
std::vector<double> Wbal_(NumericVector t, NumericVector P, double CP);
RcppExport SEXP cycleRtools_Wbal_(SEXP tSEXP, SEXP PSEXP, SEXP CPSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type t(tSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type P(PSEXP);
    Rcpp::traits::input_parameter< double >::type CP(CPSEXP);
    __result = Rcpp::wrap(Wbal_(t, P, CP));
    return __result;
END_RCPP
}
// zone_index_
std::vector<double> zone_index_(NumericVector x, NumericVector zb);
RcppExport SEXP cycleRtools_zone_index_(SEXP xSEXP, SEXP zbSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type zb(zbSEXP);
    __result = Rcpp::wrap(zone_index_(x, zb));
    return __result;
END_RCPP
}
